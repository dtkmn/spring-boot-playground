services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: [ "CMD", "echo", "ruok", "|", "nc", "localhost", "2181" ]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: confluentinc/cp-kafka:7.6.1
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_HEAP_OPTS: -Xmx1024M -Xms1024M
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "9092" ]
      interval: 10s
      timeout: 5s
      retries: 10
    entrypoint: ["/bin/bash", "-c", "/etc/confluent/docker/run & /scripts/bootstrap-topics.sh"]
    volumes:
      - ./scripts:/scripts
      - ./data:/data

#  schema-registry:
#    image: confluentinc/cp-schema-registry:7.6.1
#    depends_on:
#      - kafka
#    ports:
#      - "8081:8081"
#    environment:
#      SCHEMA_REGISTRY_HOST_NAME: schema-registry
#      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:9092
##      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:2181
#      SCHEMA_REGISTRY_LISTENERS: http://schema-registry:8081/
#
#  kafdrop:
#    image: obsidiandynamics/kafdrop
#    depends_on:
#      - kafka
#    ports:
#      - "9000:9000"
#    environment:
#      KAFKA_BROKERCONNECT: kafka:9092
#      SCHEMAREGISTRY_CONNECT: http://schema-registry:8081
#      JVM_OPTS: -Xms32M -Xmx64M
#
  postgres:
    image: "postgres:${POSTGRES_VERSION:-16}"
    environment:
      POSTGRES_DB: "${POSTGRES_DB:-spring-boot-playground}"
      POSTGRES_USER: "${POSTGRES_USER:-postgres}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD:-password}"
    ports:
      - "${POSTGRES_EXPORT_PORT:-5432}:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - "postgresData:/var/lib/postgresql/data"

#  app:
#    image: ghcr.io/dtkmn/spring-boot-playground:latest
#    depends_on:
#      - postgres
#      - kafka
#      - schema-registry
#    ports:
#      - "8080:8080"
#    environment:
#      SPRING_PROFILES_ACTIVE: docker
#      KAFKA_BROKER: kafka:9092
#      SCHEMA_REGISTRY_URL: http://schema-registry:8081

volumes:
  postgresData: